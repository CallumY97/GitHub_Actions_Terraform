name: Terraform Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'on-demand-pipelines/**'
  pull_request:
    branches:
      - main

env:
      ARM_TENANT_ID: test
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
      ARM_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCESS_KEY }}      


jobs:

  dev_deploy:
    runs-on: ubuntu-latest
    #environment: development 
    env: 
      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
      name: Dev Deploy
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Dev Terraform
        id: dev-tf-deploy
        uses: ./.github/actions/terraform-deploy
        env:
          ARM_TENANT_ID: ${{ secrets.TERRAFORM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCESS_KEY }}
          WORKING_DIRECTORY: ./terraform
        with:
          environment: dev
          serviceprinciple_key: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          subscription_id: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}

      - name: QA Terraform
        id: qa-tf-deploy
        uses: ./.github/actions/terraform-deploy
        env:
          ARM_TENANT_ID: ${{ secrets.TERRAFORM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCESS_KEY }}
          WORKING_DIRECTORY: ./terraform
        with:
          environment: qa
          serviceprinciple_key: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
          subscription_id: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}          
  



#  dev_deploy:
#    environment: dev
#    env: 
#      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
#      name: Dev Deploy
#      uses: ./.github/workflows/terraform-deployment.yml
#      with:
#        #template: pipelines/terraform-jobs.yml
#        environment: dev
#        ARM_TENANT_ID: {{ env.ARM_TENANT_ID }}
        


#  dev_deploy:
#    #name: Dev Deploy
#    #runs-on: ubuntu-latest
#    needs: trivy_scan
#    if: always()
#    uses: ./.github/workflows/terraform-deployment.yml
#      env: 
#        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
#    with:
#      #template: pipelines/terraform-jobs.yml
#      environment: dev
#      ARM_TENANT_ID: $ARM_TENANT_ID
#      ARM_CLIENT_ID: ${{ secrets.TERRAFORM_CLIENT_ID }}
#      ARM_CLIENT_SECRET: ${{ secrets.TERRAFORM_CLIENT_SECRET }}
#      ARM_SUBSCRIPTION_ID: ${{ secrets.TERRAFORM_SUBSCRIPTION_ID }}
#      ARM_ACCESS_KEY: ${{ secrets.TERRAFORM_ACCESS_KEY }}
#      #KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
#      #config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
#      #runApply: ${{ github.event.inputs.devOnly || github.ref == 'refs/heads/main' }}

#  qa_deploy:
#    name: QA Deploy
#    runs-on: ubuntu-latest
#    needs: dev_deploy
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Terraform Deploy
#        uses: ./.github/actions/terraform-apply
#        with:
#          template: pipelines/terraform-jobs.yml
#          environment: qa
#          KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
#          config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
#
#  stg_deploy:
#    name: Staging Deploy
#    runs-on: ubuntu-latest
#    needs: qa_deploy
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Terraform Deploy
#        uses: ./.github/actions/terraform-apply
#        with:
#          template: pipelines/terraform-jobs.yml
#          environment: stg
#          KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
#          config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
#
#  live_deploy:
#    name: Live Deploy
#    runs-on: ubuntu-latest
#    needs: stg_deploy
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Terraform Deploy
#        uses: ./.github/actions/terraform-apply
#        with:
#          template: pipelines/terraform-jobs.yml
#          environment: live
#          KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
#          config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
