name: Terraform Deployment

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'on-demand-pipelines/**'
  pull_request:
    branches:
      - main

jobs:
  trivy_scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'config'
          #hide-progress: true
          #format: 'sarif'
          #output: 'trivy-results.sarif'
          #exit-code: '1'
          #ignore-unfixed: true
          #severity: 'CRITICAL,HIGH'

     # - name: Upload Trivy scan results to GitHub Security tab
     #   uses: github/codeql-action/upload-sarif@v2
     #   with:
     #     sarif_file: 'trivy-results.sarif'



      #- name: Trivy Scan
      #  uses: Org/repo_name@main
      #  with:
      #    template: tfsec/trivy-new-pipeline.yml
      #    WorkingDirectory: ${{ github.workspace }}/terraform

  dev_deploy:
    #name: Dev Deploy
    #runs-on: ubuntu-latest
    needs: trivy_scan
    if: always()
    uses: ./.github/workflows/terraform-deployment.yml
    with:
      #template: pipelines/terraform-jobs.yml
      environment: dev
      #KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
      #config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
      #runApply: ${{ github.event.inputs.devOnly || github.ref == 'refs/heads/main' }}

#  qa_deploy:
#    name: QA Deploy
#    runs-on: ubuntu-latest
#    needs: dev_deploy
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Terraform Deploy
#        uses: ./.github/actions/terraform-apply
#        with:
#          template: pipelines/terraform-jobs.yml
#          environment: qa
#          KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
#          config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
#
#  stg_deploy:
#    name: Staging Deploy
#    runs-on: ubuntu-latest
#    needs: qa_deploy
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Terraform Deploy
#        uses: ./.github/actions/terraform-apply
#        with:
#          template: pipelines/terraform-jobs.yml
#          environment: stg
#          KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
#          config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
#
#  live_deploy:
#    name: Live Deploy
#    runs-on: ubuntu-latest
#    needs: stg_deploy
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Terraform Deploy
#        uses: ./.github/actions/terraform-apply
#        with:
#          template: pipelines/terraform-jobs.yml
#          environment: live
#          KV_variablegroup: ${{ secrets.KV_VARIABLEGROUP }}
#          config_variablegroup: ${{ secrets.CONFIG_VARIABLEGROUP }}
